{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\firebase\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from \"../firebase/Authenticator\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: RouteComponent,\n    ...rest\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const auth = getAuth();\n  onAuthStateChanged(auth).then(user => {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: /*#__PURE__*/_jsxDEV(RouteComponent, { ...rest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }\n  }).catch(error => {\n    console.log(error.message);\n  }); // return (\n  //     <Route\n  //         {...rest}\n  //         render={routeProps =>\n  //             !!currentUser ? (\n  //                 <RouteComponent {...routeProps} />\n  //             ) : (<Redirect to={\"/login\"} />)\n  //         }\n  //     />\n  // )\n};\n\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/firebase/PrivateRoute.js"],"names":["useContext","Route","Redirect","AuthContext","getAuth","onAuthStateChanged","PrivateRoute","component","RouteComponent","rest","currentUser","auth","then","user","catch","error","console","log","message"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,eAA5C;;;AAEA,MAAMC,YAAY,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,SAAS,EAAEC,cAAb;AAA6B,OAAGC;AAAhC,GAA2C;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAkBV,UAAU,CAACG,WAAD,CAAlC;AACA,QAAMQ,IAAI,GAAGP,OAAO,EAApB;AACAC,EAAAA,kBAAkB,CAACM,IAAD,CAAlB,CACKC,IADL,CACWC,IAAD,IAAU;AACZ,QAAIA,IAAJ,EAAU;AACN,0BACI,QAAC,KAAD,OACQJ,IADR;AAEI,QAAA,MAAM,eACF,QAAC,cAAD,OAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KATD,MASO;AACH,0BACI,QAAC,KAAD,OACQA,IADR;AAEI,QAAA,MAAM,eACF,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH;AACJ,GArBL,EAsBKK,KAtBL,CAsBYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,GAxBL,EAH6D,CA4B7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAvCD;;GAAMZ,Y;;KAAAA,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from \"../firebase/Authenticator\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth)\r\n        .then((user) => {\r\n            if (user) {\r\n                return (\r\n                    <Route\r\n                        {...rest}\r\n                        render={\r\n                            <RouteComponent {...rest} />\r\n                        }\r\n                    />\r\n                )\r\n            } else {\r\n                return (\r\n                    <Route\r\n                        {...rest}\r\n                        render={\r\n                            <Redirect to={\"/login\"} />\r\n                        }\r\n                    />\r\n                )\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.log(error.message);\r\n        })\r\n    // return (\r\n    //     <Route\r\n    //         {...rest}\r\n    //         render={routeProps =>\r\n    //             !!currentUser ? (\r\n    //                 <RouteComponent {...routeProps} />\r\n    //             ) : (<Redirect to={\"/login\"} />)\r\n    //         }\r\n    //     />\r\n    // )\r\n\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}
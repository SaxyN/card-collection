{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\components\\\\Inventory\\\\InventoryFrame.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InventoryItem from './InventoryItem';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    border: \"solid red 1px\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n    marginLeft: \"50px\",\n    marginLRight: \"50px\"\n  }\n}));\n\nconst InventoryFrame = _ref => {\n  _s();\n\n  let {\n    inventory\n  } = _ref;\n  const classes = useStyles();\n  console.log(\"frame: \", inventory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.frame,\n    children: inventory ? Object.keys(inventory).map((item, index) => {\n      console.log(inventory[item].card_id);\n      return /*#__PURE__*/_jsxDEV(InventoryItem, {\n        itemData: inventory[item].card_id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Empty\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this); // if (inventory) {\n  //     inventory.map((item, index) => {\n  //         return (\n  //             <InventoryItem/>\n  //         )\n  //     })}\n  // } else {\n  //     return (\n  //         <>Empty</>\n  //     )\n  // }\n};\n\n_s(InventoryFrame, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InventoryFrame;\nexport default InventoryFrame;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryFrame\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/components/Inventory/InventoryFrame.js"],"names":["React","InventoryItem","makeStyles","useStyles","theme","frame","border","width","display","justifyContent","marginTop","marginLeft","marginLRight","InventoryFrame","inventory","classes","console","log","Object","keys","map","item","index","card_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,eADL;AAEHC,IAAAA,KAAK,EAAE,MAFJ;AAEYC,IAAAA,OAAO,EAAE,MAFrB;AAE6BC,IAAAA,cAAc,EAAE,QAF7C;AAEuDC,IAAAA,SAAS,EAAE,MAFlE;AAE0EC,IAAAA,UAAU,EAAE,MAFtF;AAE8FC,IAAAA,YAAY,EAAE;AAF5G;AAD8B,CAAZ,CAAD,CAA5B;;AAOA,MAAMC,cAAc,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACtC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,SAAvB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACV,KAAxB;AAAA,cACKS,SAAS,GACNI,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxCN,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACO,IAAD,CAAT,CAAgBE,OAA5B;AACA,0BACI,QAAC,aAAD;AAA2B,QAAA,QAAQ,EAAET,SAAS,CAACO,IAAD,CAAT,CAAgBE;AAArD,SAAoBD,KAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KALD,CADM,gBAQN;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,UADJ,CAJsC,CAkBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA7BD;;GAAMT,c;UACcV,S;;;KADdU,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport InventoryItem from './InventoryItem';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    frame: {\r\n        border: \"solid red 1px\",\r\n        width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\", marginLeft: \"50px\", marginLRight: \"50px\"\r\n    }\r\n}))\r\n\r\nconst InventoryFrame = ({ inventory }) => {\r\n    const classes = useStyles()\r\n    console.log(\"frame: \", inventory);\r\n\r\n    return (\r\n        <div className={classes.frame}>\r\n            {inventory ?\r\n                Object.keys(inventory).map((item, index) => {\r\n                    console.log(inventory[item].card_id)\r\n                    return (\r\n                        <InventoryItem key={index} itemData={inventory[item].card_id} />\r\n                    )\r\n                })\r\n                :\r\n                <>Empty</>\r\n            }\r\n        </div>\r\n    )\r\n    // if (inventory) {\r\n    //     inventory.map((item, index) => {\r\n    //         return (\r\n    //             <InventoryItem/>\r\n    //         )\r\n    //     })}\r\n    // } else {\r\n    //     return (\r\n    //         <>Empty</>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default InventoryFrame;"]},"metadata":{},"sourceType":"module"}
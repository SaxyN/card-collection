{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\components\\\\Inventory\\\\InventoryItem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, styled } from '@mui/styles';\nimport { Badge, Typography } from \"@mui/material\"; // Various Card Types\n\nimport NormalCard from '../CardItem/NormalCard/NormalCard';\nimport HoloCard from '../CardItem/HoloCard/HoloCard';\nimport ShatterCard from '../CardItem/ShatterCard/ShatterCard';\nimport FullArtCard from '../CardItem/FullArt/FullArtCard';\nimport ExpandedItem from '../ExpandedItem/ExpandedItem';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  itemOuter: {\n    postiion: \"relative\",\n    marginBottom: \"25px\",\n    // border: \"solid 1px black\",\n    width: \"208px\",\n    height: \"293px\",\n    // boxShadow: \"5px 5px 5px black\",\n    borderRadius: \"7px\",\n    transition: \"transform .5s ease\",\n    zIndex: 200\n  },\n  img: {\n    width: \"210px\",\n    height: \"295px\",\n    borderRadius: \"7px\",\n    zIndex: \"100\",\n    position: \"absolute\",\n    top: 10\n  },\n  img2: {\n    width: \"210px\",\n    height: \"295px\",\n    borderRadius: \"7px\",\n    boxShadow: \"2px 5px 5px black\",\n    transition: \"transform 0.25s ease\",\n    zIndex: \"200\",\n    \"&:animate\": {}\n  },\n  img3: {\n    position: \"relative\",\n    width: \"210px\",\n    height: \"295px\",\n    borderRadius: \"7px\",\n    boxShadow: \"5px 5px 5px black\",\n    transition: \"transform 0.25s ease\" // \"&:hover\": {\n    //     transform: \"scale(1.1)\",\n    // },\n\n  },\n  countBadge: {\n    position: \"absolute\",\n    zIndex: \"100\",\n    top: 0\n  },\n  cardBlank: {\n    backgroundColor: \"grey\",\n    width: \"210px\",\n    height: \"295px\",\n    borderRadius: \"7px\"\n  }\n}));\n\nconst InventoryItem = _ref => {\n  _s();\n\n  let {\n    itemId,\n    itemCount,\n    itemType\n  } = _ref;\n  const classes = useStyles();\n  const [openView1, setOpenView1] = React.useState(false);\n  const [openView2, setOpenView2] = React.useState(false);\n  const StyledBadge = styled(Badge)(_ref2 => {\n    let {\n      theme\n    } = _ref2;\n    return {\n      '& .MuiBadge-badge': {\n        right: -97,\n        top: 295,\n        border: `2px solid black`,\n        padding: '0 4px'\n      }\n    };\n  });\n  const StyledCounter = styled('div')({\n    color: 'black',\n    backgroundColor: 'white',\n    border: \"solid 2px black\",\n    // position: \"absolute\",\n    width: \"20%\",\n    paddingTop: 8,\n    borderRadius: 10,\n    top: 300,\n    left: 85,\n    marginLeft: \"42%\",\n    marginTop: \"-20px\",\n    zIndex: 500\n  });\n\n  if (itemCount > 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.itemOuter,\n        onClick: () => setOpenView1(!openView1),\n        children: [itemType === \"normal\" ? /*#__PURE__*/_jsxDEV(NormalCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this) : itemType === \"holo\" ? /*#__PURE__*/_jsxDEV(HoloCard, {\n          style: {\n            width: \"4200px\",\n            height: \"590px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }, this) : itemType === \"shatter\" ? /*#__PURE__*/_jsxDEV(ShatterCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this) // <FullArtCard />\n        // <TestCard />\n        : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(StyledCounter, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: itemCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ExpandedItem, {\n        open: openView1,\n        cardType: itemType,\n        cardCount: itemCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.itemOuter,\n      onClick: () => setOpenView2(!openView2),\n      children: [itemType === \"normal\" ? /*#__PURE__*/_jsxDEV(NormalCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this) : itemType === \"holo\" ? /*#__PURE__*/_jsxDEV(HoloCard, {\n        style: {\n          width: \"210px\",\n          height: \"295px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this) : itemType === \"shatter\" ? /*#__PURE__*/_jsxDEV(ShatterCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Error Unknown Type\"\n      }, void 0, false), /*#__PURE__*/_jsxDEV(ExpandedItem, {\n        open: openView2,\n        cardType: itemType,\n        cardCount: itemCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(InventoryItem, \"qIQbcHiD2ocEKbjYPMnNeu+rnqM=\", false, function () {\n  return [useStyles];\n});\n\n_c = InventoryItem;\nexport default InventoryItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryItem\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/components/Inventory/InventoryItem.js"],"names":["React","makeStyles","styled","Badge","Typography","NormalCard","HoloCard","ShatterCard","FullArtCard","ExpandedItem","useStyles","theme","itemOuter","postiion","marginBottom","width","height","borderRadius","transition","zIndex","img","position","top","img2","boxShadow","img3","countBadge","cardBlank","backgroundColor","InventoryItem","itemId","itemCount","itemType","classes","openView1","setOpenView1","useState","openView2","setOpenView2","StyledBadge","right","border","padding","StyledCounter","color","paddingTop","left","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles, styled } from '@mui/styles';\r\nimport { Badge, Typography } from \"@mui/material\";\r\n\r\n// Various Card Types\r\nimport NormalCard from '../CardItem/NormalCard/NormalCard';\r\nimport HoloCard from '../CardItem/HoloCard/HoloCard';\r\nimport ShatterCard from '../CardItem/ShatterCard/ShatterCard';\r\nimport FullArtCard from '../CardItem/FullArt/FullArtCard';\r\n\r\nimport ExpandedItem from '../ExpandedItem/ExpandedItem';\r\nimport \"./style.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    itemOuter: {\r\n        postiion: \"relative\",\r\n        marginBottom: \"25px\",\r\n        // border: \"solid 1px black\",\r\n        width: \"208px\",\r\n        height: \"293px\",\r\n        // boxShadow: \"5px 5px 5px black\",\r\n        borderRadius: \"7px\",\r\n        transition: \"transform .5s ease\",\r\n        zIndex: 200,\r\n\r\n    },\r\n\r\n    img: {\r\n        width: \"210px\",\r\n        height: \"295px\",\r\n        borderRadius: \"7px\",\r\n        zIndex: \"100\",\r\n        position: \"absolute\",\r\n        top: 10,\r\n    },\r\n\r\n    img2: {\r\n        width: \"210px\",\r\n        height: \"295px\",\r\n        borderRadius: \"7px\",\r\n        boxShadow: \"2px 5px 5px black\",\r\n        transition: \"transform 0.25s ease\",\r\n        zIndex: \"200\",\r\n        \"&:animate\": {\r\n\r\n        }\r\n    },\r\n\r\n    img3: {\r\n        position: \"relative\",\r\n        width: \"210px\",\r\n        height: \"295px\",\r\n        borderRadius: \"7px\",\r\n        boxShadow: \"5px 5px 5px black\",\r\n        transition: \"transform 0.25s ease\",\r\n        // \"&:hover\": {\r\n        //     transform: \"scale(1.1)\",\r\n        // },\r\n    },\r\n\r\n    countBadge: {\r\n        position: \"absolute\",\r\n        zIndex: \"100\",\r\n        top: 0,\r\n    },\r\n\r\n    cardBlank: {\r\n        backgroundColor: \"grey\",\r\n        width: \"210px\",\r\n        height: \"295px\",\r\n        borderRadius: \"7px\",\r\n    }\r\n}));\r\n\r\nconst InventoryItem = ({ itemId, itemCount, itemType }) => {\r\n    const classes = useStyles();\r\n    const [openView1, setOpenView1] = React.useState(false);\r\n    const [openView2, setOpenView2] = React.useState(false);\r\n\r\n    const StyledBadge = styled(Badge)(({ theme }) => ({\r\n        '& .MuiBadge-badge': {\r\n            right: -97,\r\n            top: 295,\r\n            border: `2px solid black`,\r\n            padding: '0 4px',\r\n        }\r\n    }))\r\n\r\n    const StyledCounter = styled('div')({\r\n        color: 'black',\r\n        backgroundColor: 'white',\r\n        border: \"solid 2px black\",\r\n        // position: \"absolute\",\r\n        width: \"20%\",\r\n        paddingTop: 8,\r\n        borderRadius: 10,\r\n        top: 300,\r\n        left: 85,\r\n        marginLeft: \"42%\",\r\n        marginTop: \"-20px\",\r\n        zIndex: 500,\r\n    })\r\n\r\n    if (itemCount > 1) {\r\n        return (\r\n            <div>\r\n                <div className={classes.itemOuter} onClick={() => setOpenView1(!openView1)}>\r\n                    {/* <img className={classes.img2} src={card_template} alt=\"Card Front\" /> */}\r\n                    {/* <StyledBadge className={classes.countBadge} badgeContent={itemCount} color=\"info\" max={99}>\r\n                    </StyledBadge> */}\r\n                    {/* <div className=\"card eevee animated\"></div>\r\n                    <style className=\"hover\"></style> */}\r\n                    {itemType === \"normal\" ?\r\n                        <NormalCard />\r\n                        : itemType === \"holo\" ?\r\n                            <HoloCard style={{ width: \"4200px\", height: \"590px\" }} />\r\n                            : itemType === \"shatter\" ?\r\n                                <ShatterCard />\r\n                                // <FullArtCard />\r\n                                // <TestCard />\r\n                                : <></>\r\n                    }\r\n                    {/* <HoloCard /> */}\r\n                    <StyledCounter>\r\n                        <Typography variant=\"body1\">\r\n                            {itemCount}\r\n                        </Typography>\r\n                    </StyledCounter>\r\n                    {/* <ReactCardFlip isFlipped={flipped} flipDirection='horizontal'>\r\n                        <img className={classes.img} src={card_back} alt=\"Card Back\" />\r\n                        <img className={classes.img} src={card_shatter} alt=\"Card Back\" />\r\n                    </ReactCardFlip> */}\r\n                </div>\r\n                <ExpandedItem open={openView1} cardType={itemType} cardCount={itemCount} />\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={classes.itemOuter} onClick={() => setOpenView2(!openView2)}>\r\n                {/* <img className={classes.img3} src={card_front} alt=\"Card Back\" /> */}\r\n                {/* <HoloCard /> */}\r\n                {itemType === \"normal\" ?\r\n                    <NormalCard />\r\n                    : itemType === \"holo\" ?\r\n                        <HoloCard style={{ width: \"210px\", height: \"295px\" }} />\r\n                        : itemType === \"shatter\" ?\r\n                            <ShatterCard />\r\n                            : <>Error Unknown Type</>\r\n                }\r\n                {/* <NormalCard /> */}\r\n                {/* <StyledCounter>\r\n                    <Typography variant=\"body1\">\r\n                        {itemCount}\r\n                    </Typography>\r\n                </StyledCounter> */}\r\n                {/* <ReactCardFlip isFlipped={flipped} flipDirection='horizontal'>\r\n                    <img className={classes.img} src={card_back} alt=\"Card Back\" />\r\n                    <img className={classes.img} src={card_shatter} alt=\"Card Back\" />\r\n                </ReactCardFlip> */}\r\n                <ExpandedItem open={openView2} cardType={itemType} cardCount={itemCount} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InventoryItem;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\components\\\\Inventory\\\\InventoryFrame.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport InventoryItem from './InventoryItem';\nimport { makeStyles } from '@mui/styles';\nimport { Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  frame: {\n    // border: \"solid red 1px\",\n    width: \"80%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginTop: \"20px\",\n    padding: \"20px\"\n  }\n}));\n\nconst InventoryFrame = _ref => {\n  _s();\n\n  let {\n    inventory\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.frame,\n    elevation: 10,\n    children: inventory ? Object.keys(inventory).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(InventoryItem, {\n        itemData: inventory[item].card_id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Empty\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this); // if (inventory) {\n  //     inventory.map((item, index) => {\n  //         return (\n  //             <InventoryItem/>\n  //         )\n  //     })}\n  // } else {\n  //     return (\n  //         <>Empty</>\n  //     )\n  // }\n};\n\n_s(InventoryFrame, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InventoryFrame;\nexport default InventoryFrame;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryFrame\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/components/Inventory/InventoryFrame.js"],"names":["React","InventoryItem","makeStyles","Card","useStyles","theme","frame","width","display","justifyContent","marginTop","padding","InventoryFrame","inventory","classes","Object","keys","map","item","index","card_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACrCC,EAAAA,KAAK,EAAE;AACH;AACAC,IAAAA,KAAK,EAAE,KAFJ;AAGHC,IAAAA,OAAO,EAAE,MAHN;AAIHC,IAAAA,cAAc,EAAE,QAJb;AAKHC,IAAAA,SAAS,EAAE,MALR;AAMHC,IAAAA,OAAO,EAAE;AANN;AAD8B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,cAAc,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACtC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,OAAO,CAACR,KAAzB;AAAgC,IAAA,SAAS,EAAE,EAA3C;AAAA,cACKO,SAAS,GACNE,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxC,0BACI,QAAC,aAAD;AAA2B,QAAA,QAAQ,EAAEN,SAAS,CAACK,IAAD,CAAT,CAAgBE;AAArD,SAAoBD,KAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,CADM,gBAON;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADJ,CAHsC,CAgBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA3BD;;GAAMP,c;UACcR,S;;;KADdQ,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport InventoryItem from './InventoryItem';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Card } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    frame: {\r\n        // border: \"solid red 1px\",\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: \"20px\",\r\n        padding: \"20px\"\r\n    }\r\n}))\r\n\r\nconst InventoryFrame = ({ inventory }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.frame} elevation={10}>\r\n            {inventory ?\r\n                Object.keys(inventory).map((item, index) => {\r\n                    return (\r\n                        <InventoryItem key={index} itemData={inventory[item].card_id} />\r\n                    )\r\n                })\r\n                :\r\n                <>Empty</>\r\n            }\r\n        </Card>\r\n    )\r\n    // if (inventory) {\r\n    //     inventory.map((item, index) => {\r\n    //         return (\r\n    //             <InventoryItem/>\r\n    //         )\r\n    //     })}\r\n    // } else {\r\n    //     return (\r\n    //         <>Empty</>\r\n    //     )\r\n    // }\r\n}\r\n\r\nexport default InventoryFrame;"]},"metadata":{},"sourceType":"module"}
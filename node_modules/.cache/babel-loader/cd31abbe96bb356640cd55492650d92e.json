{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\components\\\\TiltCard\\\\TiltCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport \"./tilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({}));\n\nconst TiltCard = () => {\n  _s();\n\n  const classes = useStyles();\n  const tiltEffectSettings = {\n    max: 25,\n    perspective: 1000,\n    scale: 1.05,\n    speed: 500,\n    easing: \"cubic-bezier(.03,.98,.52,.99)\"\n  };\n  const card = document.querySelector(\"card\");\n  card.addEventListener(\"mouseenter\", cardMouseEnter);\n  card.addEventListener(\"mousemove\", cardMouseMove);\n  card.addEventListener(\"mouseleave\", cardMouseLeave);\n\n  function cardMouseEnter(event) {\n    setTransition();\n  }\n\n  function cardMouseMove(event) {\n    const cardWidth = card.offsetWidth;\n    const cardHeight = card.offsetHeight;\n    const centerX = card.offsetLeft + cardWidth / 2;\n    const centerY = card.offsetTop + cardHeight / 2;\n    const mouseX = event.clientX - centerX;\n    const mouseY = event.clientY - centerY;\n    const rotateXUncapped = +1 * (tiltEffectSettings.max * mouseY / (cardHeight / 2));\n    const rotateYUncapped = -1 * (tiltEffectSettings.max * mouseX / (cardWidth / 2));\n    const rotateX = rotateXUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : rotateXUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateXUncapped;\n    const rotateY = rotateYUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : rotateYUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateYUncapped;\n    card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) \n                                scale3d(${tiltEffectSettings.scale}, ${tiltEffectSettings.scale}, ${tiltEffectSettings.scale})`;\n  }\n\n  function cardMouseLeave(event) {\n    card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`;\n    setTransition();\n  }\n\n  function setTransition() {\n    clearTimeout(card.transitionTimeoutId);\n    card.style.transition = `transform ${tiltEffectSettings.speed}ms ${tiltEffectSettings.easing}`;\n    card.transitionTimeoutId = setTimeout(() => {\n      card.style.transition = \"\";\n    }, tiltEffectSettings.speed);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scratch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TiltCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TiltCard;\nexport default TiltCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiltCard\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/components/TiltCard/TiltCard.js"],"names":["React","makeStyles","useStyles","theme","TiltCard","classes","tiltEffectSettings","max","perspective","scale","speed","easing","card","document","querySelector","addEventListener","cardMouseEnter","cardMouseMove","cardMouseLeave","event","setTransition","cardWidth","offsetWidth","cardHeight","offsetHeight","centerX","offsetLeft","centerY","offsetTop","mouseX","clientX","mouseY","clientY","rotateXUncapped","rotateYUncapped","rotateX","rotateY","style","transform","clearTimeout","transitionTimeoutId","transition","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport \"./tilter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}))\r\n\r\nconst TiltCard = () => {\r\n    const classes = useStyles();\r\n\r\n    const tiltEffectSettings = {\r\n        max: 25,\r\n        perspective: 1000,\r\n        scale: 1.05,\r\n        speed: 500,\r\n        easing: \"cubic-bezier(.03,.98,.52,.99)\"\r\n    };\r\n\r\n    const card = document.querySelector(\"card\");\r\n\r\n    card.addEventListener(\"mouseenter\", cardMouseEnter);\r\n    card.addEventListener(\"mousemove\", cardMouseMove);\r\n    card.addEventListener(\"mouseleave\", cardMouseLeave);\r\n\r\n    function cardMouseEnter(event) {\r\n        setTransition();\r\n    }\r\n\r\n    function cardMouseMove(event) {\r\n        const cardWidth = card.offsetWidth;\r\n        const cardHeight = card.offsetHeight;\r\n        const centerX = card.offsetLeft + cardWidth / 2;\r\n        const centerY = card.offsetTop + cardHeight / 2;\r\n        const mouseX = event.clientX - centerX;\r\n        const mouseY = event.clientY - centerY;\r\n        const rotateXUncapped = (+1) * (tiltEffectSettings.max * mouseY / (cardHeight / 2));\r\n        const rotateYUncapped = (-1) * (tiltEffectSettings.max * mouseX / (cardWidth / 2));\r\n        const rotateX = rotateXUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : (rotateXUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateXUncapped);\r\n        const rotateY = rotateYUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : (rotateYUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateYUncapped);\r\n\r\n        card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) \r\n                                scale3d(${tiltEffectSettings.scale}, ${tiltEffectSettings.scale}, ${tiltEffectSettings.scale})`;\r\n    }\r\n\r\n    function cardMouseLeave(event) {\r\n        card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`;\r\n        setTransition();\r\n    }\r\n\r\n    function setTransition() {\r\n        clearTimeout(card.transitionTimeoutId);\r\n        card.style.transition = `transform ${tiltEffectSettings.speed}ms ${tiltEffectSettings.easing}`;\r\n        card.transitionTimeoutId = setTimeout(() => {\r\n            card.style.transition = \"\";\r\n        }, tiltEffectSettings.speed);\r\n    }\r\n\r\n    return (\r\n        <div class=\"card\">\r\n            <h1>Scratch</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TiltCard;"]},"metadata":{},"sourceType":"module"}
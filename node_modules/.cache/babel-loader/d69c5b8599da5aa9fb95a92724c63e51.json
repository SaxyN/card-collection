{"ast":null,"code":"const tiltEffectSettings = {\n  max: 25,\n  perspective: 1000,\n  scale: 1.05,\n  speed: 500,\n  easing: \"cubic-bezier(.03,.98,.52,.99)\"\n};\nconst card = document.querySelector(\".card\");\ncard.addEventListener(\"mouseenter\", cardMouseEnter);\ncard.addEventListener(\"mousemove\", cardMouseMove);\ncard.addEventListener(\"mouseleave\", cardMouseLeave);\n\nfunction cardMouseEnter(event) {\n  setTransition();\n}\n\nfunction cardMouseMove(event) {\n  const cardWidth = card.offsetWidth;\n  const cardHeight = card.offsetHeight;\n  const centerX = card.offsetLeft + cardWidth / 2;\n  const centerY = card.offsetTop + cardHeight / 2;\n  const mouseX = event.clientX - centerX;\n  const mouseY = event.clientY - centerY;\n  const rotateXUncapped = +1 * (tiltEffectSettings.max * mouseY / (cardHeight / 2));\n  const rotateYUncapped = -1 * (tiltEffectSettings.max * mouseX / (cardWidth / 2));\n  const rotateX = rotateXUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : rotateXUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateXUncapped;\n  const rotateY = rotateYUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : rotateYUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateYUncapped;\n  card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) \n                            scale3d(${tiltEffectSettings.scale}, ${tiltEffectSettings.scale}, ${tiltEffectSettings.scale})`;\n}\n\nfunction cardMouseLeave(event) {\n  card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`;\n  setTransition();\n}\n\nfunction setTransition() {\n  clearTimeout(card.transitionTimeoutId);\n  card.style.transition = `transform ${tiltEffectSettings.speed}ms ${tiltEffectSettings.easing}`;\n  card.transitionTimeoutId = setTimeout(() => {\n    card.style.transition = \"\";\n  }, tiltEffectSettings.speed);\n}","map":{"version":3,"sources":["D:/Code/React/card-collection/src/components/TiltCard/tilter.js"],"names":["tiltEffectSettings","max","perspective","scale","speed","easing","card","document","querySelector","addEventListener","cardMouseEnter","cardMouseMove","cardMouseLeave","event","setTransition","cardWidth","offsetWidth","cardHeight","offsetHeight","centerX","offsetLeft","centerY","offsetTop","mouseX","clientX","mouseY","clientY","rotateXUncapped","rotateYUncapped","rotateX","rotateY","style","transform","clearTimeout","transitionTimeoutId","transition","setTimeout"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG;AACvBC,EAAAA,GAAG,EAAE,EADkB;AAEvBC,EAAAA,WAAW,EAAE,IAFU;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBC,EAAAA,KAAK,EAAE,GAJgB;AAKvBC,EAAAA,MAAM,EAAE;AALe,CAA3B;AAQA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AAEAF,IAAI,CAACG,gBAAL,CAAsB,YAAtB,EAAoCC,cAApC;AACAJ,IAAI,CAACG,gBAAL,CAAsB,WAAtB,EAAmCE,aAAnC;AACAL,IAAI,CAACG,gBAAL,CAAsB,YAAtB,EAAoCG,cAApC;;AAEA,SAASF,cAAT,CAAwBG,KAAxB,EAA+B;AAC3BC,EAAAA,aAAa;AAChB;;AAED,SAASH,aAAT,CAAuBE,KAAvB,EAA8B;AAC1B,QAAME,SAAS,GAAGT,IAAI,CAACU,WAAvB;AACA,QAAMC,UAAU,GAAGX,IAAI,CAACY,YAAxB;AACA,QAAMC,OAAO,GAAGb,IAAI,CAACc,UAAL,GAAkBL,SAAS,GAAG,CAA9C;AACA,QAAMM,OAAO,GAAGf,IAAI,CAACgB,SAAL,GAAiBL,UAAU,GAAG,CAA9C;AACA,QAAMM,MAAM,GAAGV,KAAK,CAACW,OAAN,GAAgBL,OAA/B;AACA,QAAMM,MAAM,GAAGZ,KAAK,CAACa,OAAN,GAAgBL,OAA/B;AACA,QAAMM,eAAe,GAAI,CAAC,CAAF,IAAQ3B,kBAAkB,CAACC,GAAnB,GAAyBwB,MAAzB,IAAmCR,UAAU,GAAG,CAAhD,CAAR,CAAxB;AACA,QAAMW,eAAe,GAAI,CAAC,CAAF,IAAQ5B,kBAAkB,CAACC,GAAnB,GAAyBsB,MAAzB,IAAmCR,SAAS,GAAG,CAA/C,CAAR,CAAxB;AACA,QAAMc,OAAO,GAAGF,eAAe,GAAG,CAAC3B,kBAAkB,CAACC,GAAtC,GAA4C,CAACD,kBAAkB,CAACC,GAAhE,GAAuE0B,eAAe,GAAG3B,kBAAkB,CAACC,GAArC,GAA2CD,kBAAkB,CAACC,GAA9D,GAAoE0B,eAA3J;AACA,QAAMG,OAAO,GAAGF,eAAe,GAAG,CAAC5B,kBAAkB,CAACC,GAAtC,GAA4C,CAACD,kBAAkB,CAACC,GAAhE,GAAuE2B,eAAe,GAAG5B,kBAAkB,CAACC,GAArC,GAA2CD,kBAAkB,CAACC,GAA9D,GAAoE2B,eAA3J;AAEAtB,EAAAA,IAAI,CAACyB,KAAL,CAAWC,SAAX,GAAwB,eAAchC,kBAAkB,CAACE,WAAY,eAAc2B,OAAQ,gBAAeC,OAAQ;AACtH,sCAAsC9B,kBAAkB,CAACG,KAAM,KAAIH,kBAAkB,CAACG,KAAM,KAAIH,kBAAkB,CAACG,KAAM,GADrH;AAEH;;AAED,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BP,EAAAA,IAAI,CAACyB,KAAL,CAAWC,SAAX,GAAwB,eAAchC,kBAAkB,CAACE,WAAY,kDAArE;AACAY,EAAAA,aAAa;AAChB;;AAED,SAASA,aAAT,GAAyB;AACrBmB,EAAAA,YAAY,CAAC3B,IAAI,CAAC4B,mBAAN,CAAZ;AACA5B,EAAAA,IAAI,CAACyB,KAAL,CAAWI,UAAX,GAAyB,aAAYnC,kBAAkB,CAACI,KAAM,MAAKJ,kBAAkB,CAACK,MAAO,EAA7F;AACAC,EAAAA,IAAI,CAAC4B,mBAAL,GAA2BE,UAAU,CAAC,MAAM;AACxC9B,IAAAA,IAAI,CAACyB,KAAL,CAAWI,UAAX,GAAwB,EAAxB;AACH,GAFoC,EAElCnC,kBAAkB,CAACI,KAFe,CAArC;AAGH","sourcesContent":["const tiltEffectSettings = {\r\n    max: 25,\r\n    perspective: 1000,\r\n    scale: 1.05,\r\n    speed: 500,\r\n    easing: \"cubic-bezier(.03,.98,.52,.99)\"\r\n};\r\n\r\nconst card = document.querySelector(\".card\");\r\n\r\ncard.addEventListener(\"mouseenter\", cardMouseEnter);\r\ncard.addEventListener(\"mousemove\", cardMouseMove);\r\ncard.addEventListener(\"mouseleave\", cardMouseLeave);\r\n\r\nfunction cardMouseEnter(event) {\r\n    setTransition();\r\n}\r\n\r\nfunction cardMouseMove(event) {\r\n    const cardWidth = card.offsetWidth;\r\n    const cardHeight = card.offsetHeight;\r\n    const centerX = card.offsetLeft + cardWidth / 2;\r\n    const centerY = card.offsetTop + cardHeight / 2;\r\n    const mouseX = event.clientX - centerX;\r\n    const mouseY = event.clientY - centerY;\r\n    const rotateXUncapped = (+1) * (tiltEffectSettings.max * mouseY / (cardHeight / 2));\r\n    const rotateYUncapped = (-1) * (tiltEffectSettings.max * mouseX / (cardWidth / 2));\r\n    const rotateX = rotateXUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : (rotateXUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateXUncapped);\r\n    const rotateY = rotateYUncapped < -tiltEffectSettings.max ? -tiltEffectSettings.max : (rotateYUncapped > tiltEffectSettings.max ? tiltEffectSettings.max : rotateYUncapped);\r\n\r\n    card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) \r\n                            scale3d(${tiltEffectSettings.scale}, ${tiltEffectSettings.scale}, ${tiltEffectSettings.scale})`;\r\n}\r\n\r\nfunction cardMouseLeave(event) {\r\n    card.style.transform = `perspective(${tiltEffectSettings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`;\r\n    setTransition();\r\n}\r\n\r\nfunction setTransition() {\r\n    clearTimeout(card.transitionTimeoutId);\r\n    card.style.transition = `transform ${tiltEffectSettings.speed}ms ${tiltEffectSettings.easing}`;\r\n    card.transitionTimeoutId = setTimeout(() => {\r\n        card.style.transition = \"\";\r\n    }, tiltEffectSettings.speed);\r\n}"]},"metadata":{},"sourceType":"module"}
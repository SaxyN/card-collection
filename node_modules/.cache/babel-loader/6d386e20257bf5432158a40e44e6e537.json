{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\containers\\\\InventoryContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from '../components/Header/Header';\nimport InventoryFrame from '../components/Inventory/InventoryFrame';\nimport { db } from \"../firebase/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { useSelector } from \"react-redux\";\nimport * as actions from \"../store/cards/cards.action\";\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InventoryContainer = () => {\n  _s();\n\n  const [inventory, setInventory] = React.useState([]);\n  const [searched, setSearched] = React.useState(false);\n  const dispatch = useDispatch();\n  const {\n    inventoryData\n  } = useSelector(state => ({\n    inventoryData: state.cards.inventory\n  }));\n  getInventory();\n\n  async function getInventory() {\n    if (inventoryData !== null) {\n      return;\n    }\n\n    const docRef = doc(db, \"users\", \"inventory\");\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      // console.log(\"Doc Data: \", docSnap.data());\n      setSearched(true);\n      dispatch(actions.loadInventoryData(docSnap.data()));\n      return docSnap.data();\n    } else {\n      console.log(\"no such data\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(InventoryFrame, {\n        inventory: inventoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InventoryContainer, \"yyyGnavobr4uFzZ6MFhltpRTu1U=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = InventoryContainer;\nexport default InventoryContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InventoryContainer\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/containers/InventoryContainer.js"],"names":["React","Header","InventoryFrame","db","doc","getDoc","useSelector","actions","useDispatch","InventoryContainer","inventory","setInventory","useState","searched","setSearched","dispatch","inventoryData","state","cards","getInventory","docRef","docSnap","exists","loadInventoryData","data","console","log","width","display","justifyContent","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,EAAT,QAAmB,sBAAnB;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACY,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAoBV,WAAW,CAAEW,KAAD,KAAY;AAC9CD,IAAAA,aAAa,EAAEC,KAAK,CAACC,KAAN,CAAYR;AADmB,GAAZ,CAAD,CAArC;AAGAS,EAAAA,YAAY;;AAEZ,iBAAeA,YAAf,GAA8B;AAC1B,QAAIH,aAAa,KAAK,IAAtB,EAA4B;AACxB;AACH;;AACD,UAAMI,MAAM,GAAGhB,GAAG,CAACD,EAAD,EAAK,OAAL,EAAc,WAAd,CAAlB;AACA,UAAMkB,OAAO,GAAG,MAAMhB,MAAM,CAACe,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;AAClB;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,MAAAA,QAAQ,CAACR,OAAO,CAACgB,iBAAR,CAA0BF,OAAO,CAACG,IAAR,EAA1B,CAAD,CAAR;AACA,aAAOH,OAAO,CAACG,IAAR,EAAP;AACH,KALD,MAKO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,OAAO,EAAE,MAA1B;AAAkCC,QAAAA,cAAc,EAAE,QAAlD;AAA4DC,QAAAA,SAAS,EAAE;AAAvE,OAAZ;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEd;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAlCD;;GAAMP,kB;UAGeD,W,EACSF,W;;;KAJxBG,kB;AAoCN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\r\nimport Header from '../components/Header/Header';\r\nimport InventoryFrame from '../components/Inventory/InventoryFrame';\r\nimport { db } from \"../firebase/firebase\";\r\n\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport * as actions from \"../store/cards/cards.action\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst InventoryContainer = () => {\r\n    const [inventory, setInventory] = React.useState([]);\r\n    const [searched, setSearched] = React.useState(false);\r\n    const dispatch = useDispatch();\r\n    const { inventoryData } = useSelector((state) => ({\r\n        inventoryData: state.cards.inventory,\r\n    }))\r\n    getInventory();\r\n\r\n    async function getInventory() {\r\n        if (inventoryData !== null) {\r\n            return\r\n        }\r\n        const docRef = doc(db, \"users\", \"inventory\");\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n            // console.log(\"Doc Data: \", docSnap.data());\r\n            setSearched(true);\r\n            dispatch(actions.loadInventoryData(docSnap.data()));\r\n            return docSnap.data();\r\n        } else {\r\n            console.log(\"no such data\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\r\n                <InventoryFrame inventory={inventoryData} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryContainer"]},"metadata":{},"sourceType":"module"}
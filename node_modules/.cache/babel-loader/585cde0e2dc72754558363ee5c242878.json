{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\React\\\\card-collection\\\\src\\\\firebase\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from \"../firebase/Authenticator\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    component: RouteComponent,\n    ...rest\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const auth = getAuth();\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      return /*#__PURE__*/_jsxDEV(RouteComponent, { ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    }\n  }); // return (\n  //     <Route\n  //         {...rest}\n  //         render={routeProps =>\n  //             !!currentUser ? (\n  //                 <RouteComponent {...routeProps} />\n  //             ) : (<Redirect to={\"/login\"} />)\n  //         }\n  //     />\n  // )\n};\n\n_s(PrivateRoute, \"3CHVfvdogVMdIKctk02PXQKNcBM=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Code/React/card-collection/src/firebase/PrivateRoute.js"],"names":["useContext","Route","Redirect","AuthContext","getAuth","onAuthStateChanged","PrivateRoute","component","RouteComponent","rest","currentUser","auth","user"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,eAA5C;;;AAEA,MAAMC,YAAY,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,SAAS,EAAEC,cAAb;AAA6B,OAAGC;AAAhC,GAA2C;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAkBV,UAAU,CAACG,WAAD,CAAlC;AACA,QAAMQ,IAAI,GAAGP,OAAO,EAApB;AACAC,EAAAA,kBAAkB,CAACM,IAAD,EAAQC,IAAD,IAAU;AAC/B,QAAIA,IAAJ,EAAU;AACN,0BACI,QAAC,cAAD,OAAoBH;AAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO;AACH,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAViB,CAAlB,CAH6D,CAc7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAzBD;;GAAMH,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from \"../firebase/Authenticator\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const auth = getAuth();\r\n    onAuthStateChanged(auth, (user) => {\r\n        if (user) {\r\n            return (\r\n                <RouteComponent {...rest} />\r\n            )\r\n        } else {\r\n            return (\r\n                <Redirect to={\"/login\"} />\r\n            )\r\n        }\r\n    })\r\n    // return (\r\n    //     <Route\r\n    //         {...rest}\r\n    //         render={routeProps =>\r\n    //             !!currentUser ? (\r\n    //                 <RouteComponent {...routeProps} />\r\n    //             ) : (<Redirect to={\"/login\"} />)\r\n    //         }\r\n    //     />\r\n    // )\r\n\r\n}\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}